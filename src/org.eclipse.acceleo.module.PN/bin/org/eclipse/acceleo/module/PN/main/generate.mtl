[comment encoding = UTF-8 /]
[module generate('http://www.example.org/petrinets')]


[template public generatePetriNet(pn : PN)]
[comment @main/]
[file ('PN.xml', false, 'UTF-8')]
<?xml version="1.0" encoding="ISO-8859-1"?><pnml>
    <net id="Net-One" type="P/T net">
        <token id="Default" enabled="true" red="0" green="0" blue="0"/>
	[for (nodei: Integer | Sequence{1..pn.node->size()})]
		[let n: Node = pn.node->at(nodei)]
		[if n.oclIsTypeOf(Transition)]
        <transition id="[n.name/]">
            <graphics>
                <position x="[100+70*(nodei.mod(5))/].0" y="[255 + (nodei/5).floor()*70/].0"/>
            </graphics>
            <name>
                <value>[n.name/]</value>
                <graphics>
                    <offset x="-5.0" y="35.0"/>
                </graphics>
            </name>
            <orientation>
                <value>0</value>
            </orientation>
            <rate>
                <value>1.0</value>
            </rate>
            <timed>
                <value>false</value>
            </timed>
            <infiniteServer>
                <value>false</value>
            </infiniteServer>
            <priority>
                <value>1</value>
            </priority>
        </transition>
		[elseif n.oclIsTypeOf(Place)]
        <place id="[n.name/]">
            <graphics>
                <position x="[100+70*(nodei.mod(5))/].0" y="[255 + (nodei/5).floor()*70/].0"/>
            </graphics>
            <name>
                <value>[n.name/]</value>
                <graphics>
                    <offset x="0.0" y="0.0"/>
                </graphics>
            </name>
            <initialMarking>
                <value>Default,0</value>
                <graphics>
                    <offset x="0.0" y="0.0"/>
                </graphics>
            </initialMarking>
            <capacity>
                <value>0</value>
            </capacity>
        </place>
		[/if]
		[/let]
	[/for]
	[for (linkagei: Integer | Sequence{1..pn.linkage->size()})]
		[let l: Linkage = pn.linkage->at(linkagei)]
        <arc id="[l.input.name/] to [l.output.name/]" source="[l.input.name/]" target="[l.output.name/]">
            <graphics/>
            <inscription>
                <value>Default,1</value>
                <graphics/>
            </inscription>
            <tagged>
                <value>false</value>
            </tagged>
            <arcpath id="[(linkagei+1)*2/]" x="136" y="237" curvePoint="false"/>
            <arcpath id="[(linkagei+1)*2+1/]" x="252" y="223" curvePoint="false"/>
            <type value="normal"/>
        </arc>
		[/let]
	[/for]
    </net>
</pnml>
[/file]
[/template]
